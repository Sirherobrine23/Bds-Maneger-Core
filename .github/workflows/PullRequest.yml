name: Docker And Node Test
on:
  pull_request:
    branches:
      - main

jobs:
  Node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 15.x
          - 16.x

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.0.0
      with:
        node-version: ${{ matrix.node-version }}

    - name: Edit Version to next release
      if: github.event_name != 'release'
      shell: node {0}
      run: |
        const fs = require("fs");
        const JsonPackage = JSON.parse(fs.readFileSync(process.cwd()+"/package.json", "utf8"));
        const run_ID = "${{ github.run_id }}";
        JsonPackage.version = `${run_ID.slice(0, 2)}.${run_ID.slice(3, 6)}.${run_ID.slice(7, 11)}`;
        fs.writeFileSync(process.cwd()+"/package.json", JSON.stringify(JsonPackage, null, 2));
        console.log("New Version to Package:", JsonPackage.version);

    - name: Install node depedencies
      run: npm install --no-save

    - name: Install node depedencies
      run: npm run esm_module
    
    - name: Run test
      run: npm test

  Docker-Build:
    needs: [Node]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: checkout
        uses: actions/checkout@v3

      - name: Build Docker Image (Multiarch)
        id: DockerArch
        run: docker build --tag bdscore_pull:latest --file Dockerfile .

      # Run docker image with dev test
      - name: Run Docker Image (Multiarch)
        run: docker run --rm -i -e PULL_REQUEST="true" bdscore_pull:latest